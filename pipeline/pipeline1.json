{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.p_container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.p_directory",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "ForEach2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter2').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(item().name, 'Retail')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Filter1",
										"type": "Filter",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"items": {
												"value": "@item()",
												"type": "Expression"
											},
											"condition": {
												"value": "@and(endswith(item().name, '.csv'), contains(item().name , 'Student'))",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Filter1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().parameters.p_container",
														"type": "Expression"
													},
													"directory": {
														"value": "@pipeline().parameters.p_directory",
														"type": "Expression"
													},
													"file_name": {
														"value": "@activity('Filter1').output.value",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().parameters.p_container",
														"type": "Expression"
													},
													"directory": "bronze",
													"file_name": {
														"value": "@activity('Filter1').output.value",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data1_copy1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().parameters.p_container",
														"type": "Expression"
													},
													"directory": {
														"value": "@pipeline().parameters.p_directory",
														"type": "Expression"
													},
													"file_name": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().parameters.p_container",
														"type": "Expression"
													},
													"directory": {
														"value": "bronze",
														"type": "Expression"
													},
													"file_name": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Copy data1_copy1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "name_silver",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Copy data Silver",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DelimitedText1",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.p_container",
								"type": "Expression"
							},
							"directory": {
								"value": "bronze",
								"type": "Expression"
							},
							"file_name": {
								"value": "@name_silver",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DelimitedText1",
						"type": "DatasetReference",
						"parameters": {
							"container": "datalake",
							"directory": "bronze",
							"file_name": "Online Retail Data Set.csv"
						}
					}
				]
			},
			{
				"name": "Filter2",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(\n  contains(toLower(replace(trim(item().name), ' ', '')), 'retail'),\n  endswith(toLower(trim(item().name)), 'csv')\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter2').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get Metadata2",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DelimitedText1",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.p_container",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.p_directory",
											"type": "Expression"
										},
										"file_name": "@item().name"
									}
								},
								"fieldList": [
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "If Condition2",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Metadata2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(\n  convertTimeZone(activity('Get Metadata2').output.lastModified, 'UTC', 'SA Pacific Standard Time'),\n  convertTimeZone(variables('fecha_mayor'), 'UTC', 'SA Pacific Standard Time')\n)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Set variable2",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "fecha_mayor",
											"value": {
												"value": "@activity('Get Metadata2').output.lastModified",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set variable3",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Set variable2",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "archivo_mas_reciente",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "If Condition3",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If Condition2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().name, variables('archivo_mas_reciente'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Delete2",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().parameters.p_container",
														"type": "Expression"
													},
													"directory": "bronze",
													"file_name": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"logStorageSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobStorage1",
													"type": "LinkedServiceReference"
												},
												"path": {
													"value": "@pipeline().parameters.p_directory",
													"type": "Expression"
												}
											},
											"enableLogging": true,
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data1_copy1_copy1_copy1_copy1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().parameters.p_container",
														"type": "Expression"
													},
													"directory": {
														"value": "@pipeline().parameters.p_directory",
														"type": "Expression"
													},
													"file_name": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().parameters.p_container",
														"type": "Expression"
													},
													"directory": {
														"value": "bronze",
														"type": "Expression"
													},
													"file_name": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Set variable1_copy1_copy1_copy1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Copy data1_copy1_copy1_copy1_copy1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "name_silver",
											"value": {
												"value": "@variables('archivo_mas_reciente')",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Delete1_copy1_copy1",
										"type": "Delete",
										"dependsOn": [
											{
												"activity": "Set variable1_copy1_copy1_copy1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {
													"container": {
														"value": "@pipeline().parameters.p_container",
														"type": "Expression"
													},
													"directory": {
														"value": "@pipeline().parameters.p_directory",
														"type": "Expression"
													},
													"file_name": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"logStorageSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobStorage1",
													"type": "LinkedServiceReference"
												},
												"path": {
													"value": "@pipeline().parameters.p_directory",
													"type": "Expression"
												}
											},
											"enableLogging": true,
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"p_container": {
				"type": "string",
				"defaultValue": "datalake"
			},
			"p_directory": {
				"type": "string",
				"defaultValue": "landing"
			},
			"p_file_name": {
				"type": "string",
				"defaultValue": "retail_sales_dataset.csv"
			}
		},
		"variables": {
			"name_silver": {
				"type": "String"
			},
			"fecha_mayor": {
				"type": "String",
				"defaultValue": "0001-01-01T00:00:00Z"
			},
			"archivo_mas_reciente": {
				"type": "String"
			}
		},
		"annotations": []
	}
}